# Simple workflow for deploying static content to GitHub Pages
name: Deploy Relic documentation

on:
  # Runs on pushes targeting the default branch
  push:
    branches: 
      - "main"
    paths:
      - 'doc/site/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v3
        with:
            node-version: 20 
            cache: npm
            cache-dependency-path: doc/site/package-lock.json
      - name: Install dependencies
        run: npm ci 
        working-directory: ./docs
      - name: Build docs
        run: npm run build
        working-directory: ./docs
      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './doc/site/build'
          
  deploy:
    name: Deploy documentation
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
