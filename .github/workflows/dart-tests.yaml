name: Relic Ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * 0" # every Sunday at 00:00 UTC
  workflow_dispatch: # allow manual triggering

env:
  PUB_CACHE_PATH: ~/.pub-cache
  LOWEST_DART_SDK: "3.5.0"

jobs:
  build:
    name: Verify Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        dart_sdk:
          # ${{ env.LOWEST_DART_SDK }} won't work at job level as env context not available for strategy ¯\_(ツ)_/¯
          # (see https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#context-availability)
          - "3.5.0"
          - stable
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.dart_sdk }}

      - name: Cache Dart Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE_PATH }}
          key: ${{ runner.os }}-pub-cache-${{ matrix.dart_sdk }}
          restore-keys: ${{ runner.os }}-pub-cache-

      - name: Verify Formatting
        # Disable formatting check on stable for now.
        # Dart stable (3.7.2 as of 2025-03-14) has radically different formatting
        if: ${{ matrix.dart_sdk == env.LOWEST_DART_SDK }}
        run: dart format --output=none --set-exit-if-changed .

      - name: Check Dependency Bounds
        run: >-
          dart pub downgrade --tighten &&
          dart pub upgrade --major-versions &&
          git diff-files --quiet

      - name: Analyze (downgraded)
        run: >-
          dart pub downgrade &&
          dart pub get &&
          dart analyze ${{ matrix.dart_sdk == env.LOWEST_DART_SDK && '--fatal-infos' || '--fatal-warnings' }}

      - name: Analyze (upgraded)
        run: >-
          dart pub upgrade &&
          dart pub get &&
          dart analyze ${{ matrix.dart_sdk == env.LOWEST_DART_SDK && '--fatal-infos' || '--fatal-warnings' }}

      - name: Doc Dry Run
        run: dart doc --dry-run

      - name: Check Pana Score
        if: ${{ matrix.dart_sdk == 'stable' }}
        # temporary workaround until https://github.com/dart-lang/pana/issues/1499 is resolved
        continue-on-error: true
        run: >-
          dart pub global activate pana &&
          dart pub global run pana --no-warning --exit-code-threshold=0 --json

      - name: Publish Dry Run
        run: dart pub publish --dry-run

  unit_tests:
    name: Run Unit Tests
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.dart_sdk != '3.3.0' }} # env context not available for continue-on-error
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        dart_sdk: ["3.5.0", stable, beta] # env context not available for strategy
        deps: [downgrade, upgrade]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.dart_sdk }}

      - name: Cache Dart Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE_PATH }}
          key: ${{ runner.os }}-pub-cache-${{ matrix.dart_sdk }}
          restore-keys: ${{ runner.os }}-pub-cache-

      - name: Install Dependencies (${{ matrix.deps }})
        run: >-
          dart pub ${{ matrix.deps }} &&
          dart pub get

      - name: Run Tests With Coverage
        run: >-
          dart pub global activate coverage &&
          dart pub global run coverage:test_with_coverage --branch-coverage -- --reporter=failures-only

      - name: Upload Coverage
        uses: codecov/codecov-action@v5
        if: ${{ !cancelled() }} # upload coverage irrespective of test results
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info

  docs-markdown-lint:
    name: Markdown lint for docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run markdownlint on maintained docs
        uses: articulate/actions-markdownlint@v1
        with:
          config: ./doc/site/.markdownlint.yaml
          files: ./doc/site/**/*.md

  docs-test-build:
    name: Test build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: doc/site/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./doc/site
      - name: Build
        run: npm run build
        working-directory: ./doc/site
